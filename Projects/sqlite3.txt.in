cmake_minimum_required(VERSION 3.23)
include(FetchContent)

option(SQLITE_STATIC "ENABLE STATIC BUILD." @SQLITE_STATIC@)
set(IMPORT_PROJECT_STATIC_CRT @IMPORT_PROJECT_STATIC_CRT@)
set(OCMAKEUTIL_PATH @OCMAKEUTIL_PATH@)
set(OCMAKEUTIL_PROJECTS_PATH @OCMAKEUTIL_PROJECTS_PATH@)
set(ProjectName_Lower @ProjectName_Lower@)
set(ProjectName @ProjectName@)

project(download_sqlite)
include(GNUInstallDirs)

add_subdirectory(${OCMAKEUTIL_PATH} ${CMAKE_CURRENT_BINARY_DIR}/ocmakeutil)

if(IMPORT_PROJECT_STATIC_CRT)
    if(MSVC)
        set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
        add_definitions(-D_CRT_SECURE_NO_WARNINGS)
    endif()

    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT")
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MTd")
endif()

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX
        "${CMAKE_BINARY_DIR}/${ProjectName_Lower}-prefix"
        CACHE STRING "Directory to install after building" FORCE)
endif()

set(DEFAULT_URL https://www.sqlite.org/2023/sqlite-amalgamation-3430200.zip)
set(url @SQLITE_AMALGAMATION_URL@)

# set(hash af02b88cc922e7506c6659737560c0756deee24e4e7741d4b315af341edd8b40)
if(url STREQUAL "")
    set(url ${DEFAULT_URL})
elseif(NOT url)
    set(url ${DEFAULT_URL})
endif()

if(hash)
    FetchContent_Declare(download_sqlite
        URL ${url}
        URL_HASH SHA3_256=${hash}
        DOWNLOAD_NO_EXTRACT false
        DOWNLOAD_EXTRACT_TIMESTAMP false
    )
else()
    FetchContent_Declare(download_sqlite
        URL ${url}
        DOWNLOAD_NO_EXTRACT false
        DOWNLOAD_EXTRACT_TIMESTAMP false
    )
endif()

FetchContent_MakeAvailable(download_sqlite)
FetchContent_GetProperties(download_sqlite
    SOURCE_DIR download_sqlite_SOURCE_DIR
)

NewTargetSource()
AddSourceFolder(INCLUDE PUBLIC "${download_sqlite_SOURCE_DIR}")
list(APPEND SourceFiles ${SourceFiles} ${download_sqlite_SOURCE_DIR}/sqlite3.c)
list(APPEND PrivateFiles ${PrivateFiles} ${download_sqlite_SOURCE_DIR}/sqlite3.c)

function(add_lib TARGET_NAME)
    AddTargetInclude(${TARGET_NAME})
    AddTargetInstall(${TARGET_NAME} SQLite3)
endfunction()

set(TARGET_NAME ${ProjectName})
add_library(${TARGET_NAME} SHARED)
target_compile_definitions(${TARGET_NAME} PRIVATE "-DSQLITE_API=__declspec(dllexport)")
target_compile_definitions(${TARGET_NAME} INTERFACE "-DSQLITE_API=__declspec(dllimport)")
set_target_properties(${TARGET_NAME} PROPERTIES OUTPUT_NAME "sqlite3")
add_lib(${TARGET_NAME})

set(TARGET_NAME ${ProjectName}_a)
add_library(${TARGET_NAME} STATIC)
target_compile_definitions(${TARGET_NAME} PUBLIC -DSTEAM_MSG_API_NODLL)
set_target_properties(${TARGET_NAME} PROPERTIES OUTPUT_NAME "sqlite3_a")
add_lib(${TARGET_NAME})
